# Caddy docs: https://caddyserver.com/docs/caddyfile
# Make caddy.service use this (done in dotfiles/install/apt.sh): sudo ln -s $(realpath Caddyfile) /etc/caddy/
# Use `caddy reload` to make it check and reload this config instead of restarting the whole service.

# Also tried https://nginxproxymanager.com which has a nice admin UI for defining proxy hosts and access lists, but otherwise no benefit. Prefer to have config in git. Also, docker image was 760MB.

# Many web apps don't work when put into a subpath (see file Caddyfile-subpaths).
# So we use a subdomain for each app.
# sub.localhost only works if each client is adjusted (/etc/hosts).
# sub.rpi4 would require to be whitelisted in DNS rebind protection of FritzBox (for each subdomain, no wildcards like *.rpi4).
# sub.rpi4.voglerr.de works in intranet and internet (if ports have been opened in FritzBox).

# If no port is specified it defaults to https (443) and redirects http (80) to it.

# Basic auth to avoid unnecessary traffic.
# https://github.com/greenpau/caddy-security looked too complex.
# https://github.com/DoTheEvo/selfhosted-apps-docker/tree/master/caddy_v2
# https://josheli.com/knob/2021/02/24/single-sign-on-in-caddy-server-using-only-the-caddyfile-and-basic-authentication/
# Create a file auth.caddy with the following content, where the password is generated with `caddy hash-password`:
# basicauth {
# 	${USER} ${PASSWORD}
# }
# Either put this file in /etc/caddy or link it: sudo ln -s $(realpath auth.caddy) /etc/caddy/

# Serve navbar+iframe for the subdomains below.
# TODO generate? https://github.com/abiosoft/caddy-exec
rpi4.voglerr.de:80 {
	root * /home/pi/smart-home/etc/caddy/public
	file_server
}

# https://github.com/vogler/video-dl
videos.rpi4.voglerr.de:80 {
	import auth.caddy
	reverse_proxy :8080
}
# https://github.com/vogler/swm
swm.rpi4.voglerr.de:80 {
	import auth.caddy
	reverse_proxy :8081
}

# most of these have additional auth of their own
chronograf.rpi4.voglerr.de:80 {
	import auth.caddy
	reverse_proxy :8888
}
grafana.rpi4.voglerr.de:80 {
	import auth.caddy
	reverse_proxy :3000
}
octoprint.rpi4.voglerr.de:80 {
	import auth.caddy
	reverse_proxy :5000
}
webcam.rpi4.voglerr.de:80 {
	import auth.caddy
	reverse_proxy :8090
}
jellyfin.rpi4.voglerr.de:80 {
	import auth.caddy
	reverse_proxy :8096
}
portainer.rpi4.voglerr.de:80 {
	# import auth.caddy # BasicAuth not compatible: https://github.com/portainer/portainer/issues/3893
	reverse_proxy :9000 # http; default 9443 uses self-signed SSL certificate which Chrome does not like
}
