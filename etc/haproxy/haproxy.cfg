global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5s
        timeout client  15min
        timeout server  15min
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

# added the stuff below in order to request http auth when accessing OctoPrint via port 80
# would allow to open port 80 on fritzbox to access the server on port 5000 securely
# from https://community.octoprint.org/t/how-to-enable-http-authentication-on-haproxy/180/3
userlist NonLocalUsers
        user voglerr password secret_hash

frontend public
        bind :::8050 v4v6
        bind :::443 v4v6 ssl crt /etc/haproxy/cert/
        option forwardfor except 127.0.0.1
        acl Auth_OctoPrintUsers http_auth(NonLocalUsers)
        http-request auth realm OctoPrint if !Auth_OctoPrintUsers
        use_backend webcam if { path_beg /webcam/ }
        default_backend octoprint

backend octoprint
        acl ValidOctoPrintUser http_auth(NonLocalUsers)
        http-request auth realm OctoPrint if !ValidOctoPrintUser
        acl needs_scheme req.hdr_cnt(X-Scheme) eq 0
        reqrep ^([^\ :]*)\ /(.*) \1\ /\2
        reqadd X-Scheme:\ https if needs_scheme { ssl_fc }
        reqadd X-Scheme:\ http if needs_scheme !{ ssl_fc }
        option forwardfor
        server octoprint1 127.0.0.1:5000 check maxconn 10
        timeout queue 10s

backend webcam
        reqrep ^([^\ :]*)\ /webcam/(.*)     \1\ /\2
        server webcam1  127.0.0.1:8090
