[
    {
        "id": "b635b24c.eee61",
        "type": "tab",
        "label": "lights",
        "disabled": false,
        "info": ""
    },
    {
        "id": "eb78f2d0.07849",
        "type": "tab",
        "label": "Alexa",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5579b405.ff7b4c",
        "type": "tab",
        "label": "TV",
        "disabled": false,
        "info": ""
    },
    {
        "id": "abafeffb.7205",
        "type": "tab",
        "label": "presence",
        "disabled": false,
        "info": ""
    },
    {
        "id": "25f51f1a963341a3",
        "type": "tab",
        "label": "watchdog",
        "disabled": true,
        "info": ""
    },
    {
        "id": "c244880f71d23ef4",
        "type": "tab",
        "label": "WLED matrix",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "d6a6d25b50443937",
        "type": "subflow",
        "name": "buzz",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 60,
                "wires": [
                    {
                        "id": "356d54983ff87619"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "buzzes",
                "type": "num",
                "value": "1",
                "ui": {
                    "icon": "font-awesome/fa-file-sound-o",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "7f08f52740291cce",
        "type": "junction",
        "z": "b635b24c.eee61",
        "x": 440,
        "y": 800,
        "wires": [
            [
                "f9015c753baf26bd",
                "6ea6fe5e430a0c7a"
            ]
        ]
    },
    {
        "id": "45bbeade7cfa74ab",
        "type": "junction",
        "z": "d6a6d25b50443937",
        "x": 300,
        "y": 100,
        "wires": [
            [
                "3494e85f2283c1e0",
                "3fe8e2b5cf1c8662"
            ]
        ]
    },
    {
        "id": "235d4d3cb20963f4",
        "type": "junction",
        "z": "eb78f2d0.07849",
        "x": 460,
        "y": 640,
        "wires": [
            [
                "36e9087b.e10748",
                "e5649c9574569d2b"
            ]
        ]
    },
    {
        "id": "75898696.612e28",
        "type": "mqtt-broker",
        "name": "mosquitto",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "7cf0578.b836da8",
        "type": "hue-bridge",
        "name": "Philips hue",
        "bridge": "192.168.178.23",
        "key": "bHbySDyO5Hgffi0m6GC8lKnQC9100WYTFTAXTvzZ",
        "worker": "5",
        "disableupdates": false
    },
    {
        "id": "465d0087.4b2ce",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "c4597d9.54e398",
        "type": "alexa-remote-account",
        "name": "",
        "authMethod": "proxy",
        "proxyOwnIp": "rpi3",
        "proxyPort": "3456",
        "cookieFile": "/home/pi/.node-red/.alexa-remote2.auth.json",
        "refreshInterval": "3",
        "alexaServiceHost": "layla.amazon.de",
        "amazonPage": "amazon.de",
        "acceptLanguage": "de-DE",
        "userAgent": "",
        "useWsMqtt": "on",
        "autoInit": "on"
    },
    {
        "id": "4b06aa47.bc1dc4",
        "type": "samsung-tv",
        "name": "UE55KS8090",
        "model": "8001",
        "ip": "192.168.178.110",
        "mac": "CC:B1:1A:C4:31:0C",
        "token": ""
    },
    {
        "id": "a496418f.7eb54",
        "type": "telegram bot",
        "botname": "voglerr_bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "b731d344.87a9",
        "type": "fritzbox-config",
        "name": "",
        "host": "fritz.box",
        "port": "49000",
        "ssl": false,
        "user": "voglerr"
    },
    {
        "id": "119e8fc6635b6db9",
        "type": "pushbullet-config",
        "name": "pushbullet"
    },
    {
        "id": "3406502b18c11d64",
        "type": "influxdb",
        "hostname": "rpi4",
        "port": "8086",
        "protocol": "http",
        "database": "telegraf",
        "name": "rpi4",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://rpi4:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "e5ccbb173878e258",
        "type": "rpi-gpio out",
        "z": "d6a6d25b50443937",
        "name": "buzzer",
        "pin": "23",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 590,
        "y": 60,
        "wires": []
    },
    {
        "id": "3fe8e2b5cf1c8662",
        "type": "trigger",
        "z": "d6a6d25b50443937",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 420,
        "y": 60,
        "wires": [
            [
                "e5ccbb173878e258"
            ]
        ]
    },
    {
        "id": "c0238b75fd3e98d4",
        "type": "trigger",
        "z": "d6a6d25b50443937",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 420,
        "y": 140,
        "wires": [
            [
                "e5ccbb173878e258"
            ]
        ]
    },
    {
        "id": "3494e85f2283c1e0",
        "type": "delay",
        "z": "d6a6d25b50443937",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 410,
        "y": 100,
        "wires": [
            [
                "c0238b75fd3e98d4"
            ]
        ]
    },
    {
        "id": "356d54983ff87619",
        "type": "switch",
        "z": "d6a6d25b50443937",
        "name": "",
        "property": "buzzes",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 170,
        "y": 60,
        "wires": [
            [
                "3fe8e2b5cf1c8662"
            ],
            [
                "45bbeade7cfa74ab"
            ]
        ]
    },
    {
        "id": "ecc17bce.653108",
        "type": "mqtt in",
        "z": "b635b24c.eee61",
        "name": "",
        "topic": "stat/sonoff-bad/POWER",
        "qos": "2",
        "broker": "75898696.612e28",
        "inputs": 0,
        "x": 120,
        "y": 240,
        "wires": [
            [
                "c3863c2a.107cb"
            ]
        ]
    },
    {
        "id": "c3863c2a.107cb",
        "type": "function",
        "z": "b635b24c.eee61",
        "name": "store",
        "func": "flow.set('sonoff-bath', msg.payload);\nif(msg.payload == 'ON'){\n    node.status({fill:\"red\", shape:\"ring\", text:\"ON\"});\n} else {\n    node.status({fill:\"green\", shape:\"dot\", text:\"OFF\"});\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "a1e67a5.fc05788"
            ]
        ]
    },
    {
        "id": "bfd5645e.5aa088",
        "type": "mqtt in",
        "z": "b635b24c.eee61",
        "name": "Hue_Motion_Kitchen",
        "topic": "zigbee2mqtt/Hue_Motion_Kitchen",
        "qos": "2",
        "datatype": "auto",
        "broker": "75898696.612e28",
        "inputs": 0,
        "x": 110,
        "y": 460,
        "wires": [
            [
                "dc8bfee7.b6068"
            ]
        ]
    },
    {
        "id": "dc8bfee7.b6068",
        "type": "function",
        "z": "b635b24c.eee61",
        "name": "occupancy",
        "func": "// node.log(msg.payload);\nvar p = JSON.parse(msg.payload);\nflow.set('motion-kitchen', p.occupancy);\nif(p.occupancy === undefined) return; // if state_cache is off, the field does not need to be included\nif(p.occupancy){\n    node.status({fill:\"red\", shape:\"ring\", text:\"motion\"});\n} else {\n    node.status({fill:\"green\", shape:\"dot\", text:\"no motion\"});\n}\nreturn {payload: p.occupancy};",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 460,
        "wires": [
            [
                "5c483681.6157c8"
            ]
        ]
    },
    {
        "id": "5056dd69.ed4434",
        "type": "mqtt out",
        "z": "b635b24c.eee61",
        "name": "Tradfri_WS_Kitchen",
        "topic": "zigbee2mqtt/Tradfri_WS_Kitchen/set",
        "qos": "2",
        "retain": "false",
        "broker": "75898696.612e28",
        "x": 770,
        "y": 440,
        "wires": []
    },
    {
        "id": "5c483681.6157c8",
        "type": "function",
        "z": "b635b24c.eee61",
        "name": "on/off",
        "func": "const state = msg.payload ? \"ON\" : \"OFF\";\nmsg.payload = {\n  \"state\": state,\n};\n// const msg2 = Object.assign({}, msg); // copy\n// msg2.payload = {\n//   \"state\": state,\n//   \"brightness\": 255,\n//   \"color\": JSON.stringify({\"hex\": \"#FFFFFF\"}),\n//   \"color_temp\": 230,\n// }\n// highest brightness for Osram_Strip_RGBW_Kitchen:\n// {\"brightness\": 255, \"color\": {\"hex\": \"#FFFFFF\"}, \"color_temp\": 230}\n// returning msg2 somehow started making problems on 30.08.2020:\n// ON/OFF still works, but errors (0x10: MEM_ERROR) if setting color/color_temp\n// Somehow upon (re)start of flows the state is always on and the color_temp too blue.\n// Therefore we inject the right values once instead.\nreturn [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 590,
        "y": 460,
        "wires": [
            [
                "5056dd69.ed4434"
            ],
            [
                "c0e4cc9e.6e723"
            ]
        ]
    },
    {
        "id": "2615d59a.02df9a",
        "type": "mqtt in",
        "z": "b635b24c.eee61",
        "name": "Hue_Motion_Bath",
        "topic": "zigbee2mqtt/Hue_Motion_Bath",
        "qos": "2",
        "datatype": "auto",
        "broker": "75898696.612e28",
        "inputs": 0,
        "x": 110,
        "y": 60,
        "wires": [
            [
                "4fbf4092.d4e75"
            ]
        ]
    },
    {
        "id": "4fbf4092.d4e75",
        "type": "function",
        "z": "b635b24c.eee61",
        "name": "occupancy",
        "func": "// node.log(msg.payload);\nvar p = JSON.parse(msg.payload);\nif(p.occupancy === undefined) return; // if state_cache is off, the field does not need to be included\nflow.set('motion-bath', p.occupancy);\nvar m = {payload: p.occupancy ? 'ON' : 'OFF'};\nif(p.occupancy){\n    node.status({fill:\"red\", shape:\"ring\", text:\"motion\"});\n    return [m, null];\n} else {\n    node.status({fill:\"green\", shape:\"dot\", text:\"no motion\"});\n    return [null, m];\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 290,
        "y": 60,
        "wires": [
            [
                "a1e67a5.fc05788",
                "cb449346.11208"
            ],
            [
                "69f46d4c.cfcf54"
            ]
        ]
    },
    {
        "id": "cb449346.11208",
        "type": "mqtt out",
        "z": "b635b24c.eee61",
        "name": "",
        "topic": "cmnd/sonoff-bad/POWER",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "75898696.612e28",
        "x": 830,
        "y": 60,
        "wires": []
    },
    {
        "id": "4a5b10c9.6971d",
        "type": "trigger",
        "z": "b635b24c.eee61",
        "name": "off after 75s",
        "op1": "",
        "op2": "OFF",
        "op1type": "nul",
        "op2type": "str",
        "duration": "75",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "reset",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 610,
        "y": 120,
        "wires": [
            [
                "cb449346.11208"
            ]
        ]
    },
    {
        "id": "a1e67a5.fc05788",
        "type": "template",
        "z": "b635b24c.eee61",
        "name": "reset",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "reset",
        "output": "str",
        "x": 450,
        "y": 140,
        "wires": [
            [
                "4a5b10c9.6971d",
                "4a6f7292.4c12fc"
            ]
        ]
    },
    {
        "id": "fb65a943.897128",
        "type": "mqtt in",
        "z": "b635b24c.eee61",
        "name": "Aqara_Door_Bath",
        "topic": "zigbee2mqtt/Aqara_Door_Bath",
        "qos": "2",
        "datatype": "auto",
        "broker": "75898696.612e28",
        "inputs": 0,
        "x": 110,
        "y": 120,
        "wires": [
            [
                "5ee7e7bd.77a658"
            ]
        ]
    },
    {
        "id": "5ee7e7bd.77a658",
        "type": "function",
        "z": "b635b24c.eee61",
        "name": "save contact",
        "func": "// node.log(msg.payload);\nvar p = JSON.parse(msg.payload);\nif(p.contact === undefined) return;\nflow.set('contact-bath', p.contact);\nif(p.contact){\n    node.status({fill:\"red\", shape:\"ring\", text:\"closed\"});\n    if(flow.get('sonoff-bad') == 'ON')\n        return {payload: p};\n} else {\n    node.status({fill:\"green\", shape:\"dot\", text:\"open\"});\n    return {reset: true};\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "69f46d4c.cfcf54",
        "type": "function",
        "z": "b635b24c.eee61",
        "name": "open",
        "func": "if(flow.get('contact-bath')) return;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 100,
        "wires": [
            [
                "4a5b10c9.6971d"
            ]
        ]
    },
    {
        "id": "395bc88b.7f4528",
        "type": "function",
        "z": "b635b24c.eee61",
        "name": "contact, on",
        "func": "// node.log(msg.payload);\nvar p = JSON.parse(msg.payload);\nif(p.contact === undefined) return;\nif(p.contact){\n    node.status({fill:\"green\", shape:\"dot\", text:\"closed\"});\n    if(!flow.get('contact-bath') && flow.get('sonoff-bath') == 'ON')\n        return {payload: 'OFF'};\n} else {\n    node.status({fill:\"red\", shape:\"ring\", text:\"open\"});\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "4a6f7292.4c12fc"
            ]
        ]
    },
    {
        "id": "3bfffa7c.3c0a86",
        "type": "mqtt in",
        "z": "b635b24c.eee61",
        "name": "Aqara_Door_Living",
        "topic": "zigbee2mqtt/Aqara_Door_Living",
        "qos": "2",
        "datatype": "auto",
        "broker": "75898696.612e28",
        "inputs": 0,
        "x": 110,
        "y": 180,
        "wires": [
            [
                "395bc88b.7f4528"
            ]
        ]
    },
    {
        "id": "4a6f7292.4c12fc",
        "type": "trigger",
        "z": "b635b24c.eee61",
        "name": "off after 15s",
        "op1": "",
        "op2": "OFF",
        "op1type": "nul",
        "op2type": "str",
        "duration": "15",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "reset",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 610,
        "y": 180,
        "wires": [
            [
                "cb449346.11208"
            ]
        ]
    },
    {
        "id": "4399278d.1a68f8",
        "type": "mqtt in",
        "z": "b635b24c.eee61",
        "name": "",
        "topic": "sensors/shower/flow",
        "qos": "2",
        "datatype": "json",
        "broker": "75898696.612e28",
        "inputs": 0,
        "x": 110,
        "y": 300,
        "wires": [
            [
                "f5d79d86.b0845"
            ]
        ]
    },
    {
        "id": "f5d79d86.b0845",
        "type": "function",
        "z": "b635b24c.eee61",
        "name": "> 100",
        "func": "var flow = msg.payload.flow;\nif(flow > 100){\n    node.status({fill:\"red\", shape:\"ring\", text:flow+\" ml\"});\n    return msg;\n} else {\n    node.status({fill:\"green\", shape:\"dot\", text:flow+\" ml\"});\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 300,
        "wires": [
            [
                "a1e67a5.fc05788"
            ]
        ]
    },
    {
        "id": "83753421.29d968",
        "type": "comment",
        "z": "b635b24c.eee61",
        "name": "timeout 60s",
        "info": "",
        "x": 450,
        "y": 440,
        "wires": []
    },
    {
        "id": "962b13f8.05b5e",
        "type": "comment",
        "z": "b635b24c.eee61",
        "name": "mqtt <-> Hue",
        "info": "",
        "x": 90,
        "y": 660,
        "wires": []
    },
    {
        "id": "8af93c72.f45e2",
        "type": "comment",
        "z": "b635b24c.eee61",
        "name": "zigbee2mqtt",
        "info": "",
        "x": 90,
        "y": 20,
        "wires": []
    },
    {
        "id": "a00917b8.fa3218",
        "type": "mqtt in",
        "z": "b635b24c.eee61",
        "name": "",
        "topic": "nodered/Hue_Living/set",
        "qos": "2",
        "datatype": "json",
        "broker": "75898696.612e28",
        "inputs": 0,
        "x": 120,
        "y": 700,
        "wires": [
            [
                "723b160d.cd26a8"
            ]
        ]
    },
    {
        "id": "79f912a7.da9f6c",
        "type": "mqtt out",
        "z": "b635b24c.eee61",
        "name": "",
        "topic": "nodered/Hue_Living",
        "qos": "2",
        "retain": "false",
        "broker": "75898696.612e28",
        "x": 580,
        "y": 700,
        "wires": []
    },
    {
        "id": "723b160d.cd26a8",
        "type": "hue-group",
        "z": "b635b24c.eee61",
        "name": "Wohnzimmer",
        "bridge": "7cf0578.b836da8",
        "groupid": "8aa69f79-0d2d-4325-8e66-d3ee925cfe14",
        "skipevents": false,
        "initevents": false,
        "x": 350,
        "y": 700,
        "wires": [
            [
                "79f912a7.da9f6c"
            ]
        ]
    },
    {
        "id": "c0e4cc9e.6e723",
        "type": "mqtt out",
        "z": "b635b24c.eee61",
        "name": "Osram_Strip_RGBW_Kitchen",
        "topic": "zigbee2mqtt/Osram_Strip_RGBW_Kitchen/set",
        "qos": "2",
        "retain": "false",
        "broker": "75898696.612e28",
        "x": 800,
        "y": 480,
        "wires": []
    },
    {
        "id": "decc52de.cc196",
        "type": "comment",
        "z": "b635b24c.eee61",
        "name": "MQTT dash (Android) does not allow json payload for color",
        "info": "",
        "x": 230,
        "y": 560,
        "wires": []
    },
    {
        "id": "1accaff0.f84a3",
        "type": "mqtt in",
        "z": "b635b24c.eee61",
        "name": "",
        "topic": "nodered/Osram_Strip_RGBW_Kitchen/color",
        "qos": "2",
        "datatype": "auto",
        "broker": "75898696.612e28",
        "inputs": 0,
        "x": 190,
        "y": 600,
        "wires": [
            [
                "e8e8cf4b.1e846"
            ]
        ]
    },
    {
        "id": "b44bcb0.e72b938",
        "type": "mqtt out",
        "z": "b635b24c.eee61",
        "name": "",
        "topic": "zigbee2mqtt/Osram_Strip_RGBW_Kitchen/set",
        "qos": "2",
        "retain": "false",
        "broker": "75898696.612e28",
        "x": 720,
        "y": 600,
        "wires": []
    },
    {
        "id": "e8e8cf4b.1e846",
        "type": "function",
        "z": "b635b24c.eee61",
        "name": "color.hex",
        "func": "return {\n  \"payload\": {\n    \"brightness\": 255,\n    \"color\": {\n      \"hex\": msg.payload\n    }\n  }\n};",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 600,
        "wires": [
            [
                "b44bcb0.e72b938"
            ]
        ]
    },
    {
        "id": "7fcc8924.07a678",
        "type": "inject",
        "z": "b635b24c.eee61",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"state\":\"OFF\",\"color_temp\":230,\"remember_state\":true}",
        "payloadType": "json",
        "x": 590,
        "y": 500,
        "wires": [
            [
                "c0e4cc9e.6e723"
            ]
        ]
    },
    {
        "id": "6dfb6f14.0d38d",
        "type": "mqtt in",
        "z": "b635b24c.eee61",
        "name": "",
        "topic": "toothbrush",
        "qos": "2",
        "datatype": "json",
        "broker": "75898696.612e28",
        "inputs": 0,
        "x": 80,
        "y": 360,
        "wires": [
            [
                "57a06f3f.b30b9"
            ]
        ]
    },
    {
        "id": "57a06f3f.b30b9",
        "type": "function",
        "z": "b635b24c.eee61",
        "name": "running?",
        "func": "var p = msg.payload;\nif(p.running == 3){\n    node.status({fill:\"red\", shape:\"ring\", text:p.time+\"s\"});\n    return msg;\n} else {\n    node.status({fill:\"green\", shape:\"dot\", text:\"off\"});\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 360,
        "wires": [
            [
                "a1e67a5.fc05788"
            ]
        ]
    },
    {
        "id": "f9015c753baf26bd",
        "type": "template",
        "z": "b635b24c.eee61",
        "name": "toggle",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"toggle\": true\n}",
        "output": "json",
        "x": 510,
        "y": 780,
        "wires": [
            [
                "112afa77e17c164b",
                "723b160d.cd26a8"
            ]
        ]
    },
    {
        "id": "cb0442b4656180d1",
        "type": "mqtt in",
        "z": "b635b24c.eee61",
        "name": "",
        "topic": "zigbee2mqtt/Moes_4xSwitch",
        "qos": "2",
        "datatype": "json",
        "broker": "75898696.612e28",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 140,
        "y": 860,
        "wires": [
            [
                "687fe0981bf2c89e",
                "94a976c85f160bc2"
            ]
        ]
    },
    {
        "id": "687fe0981bf2c89e",
        "type": "switch",
        "z": "b635b24c.eee61",
        "name": "single",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1_single",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2_single",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3_single",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4_single",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 350,
        "y": 820,
        "wires": [
            [
                "f9015c753baf26bd"
            ],
            [
                "6ea6fe5e430a0c7a"
            ],
            [],
            []
        ]
    },
    {
        "id": "94a976c85f160bc2",
        "type": "switch",
        "z": "b635b24c.eee61",
        "name": "double",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1_double",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2_double",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3_double",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4_double",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 350,
        "y": 900,
        "wires": [
            [],
            [
                "7f08f52740291cce"
            ],
            [],
            []
        ]
    },
    {
        "id": "112afa77e17c164b",
        "type": "debug",
        "z": "b635b24c.eee61",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 760,
        "wires": []
    },
    {
        "id": "c7e931f9bec39edb",
        "type": "mqtt out",
        "z": "b635b24c.eee61",
        "name": "",
        "topic": "cmnd/sonoff-strip/POWER",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "75898696.612e28",
        "x": 700,
        "y": 820,
        "wires": []
    },
    {
        "id": "6ea6fe5e430a0c7a",
        "type": "template",
        "z": "b635b24c.eee61",
        "name": "toggle",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "toggle",
        "output": "str",
        "x": 510,
        "y": 820,
        "wires": [
            [
                "c7e931f9bec39edb"
            ]
        ]
    },
    {
        "id": "7aec34e5eb8f698e",
        "type": "comment",
        "z": "b635b24c.eee61",
        "name": "patched node-red-contrib-huemagic",
        "info": "https://github.com/Foddy/node-red-contrib-huemagic/issues/373#issuecomment-1150817250",
        "x": 400,
        "y": 660,
        "wires": []
    },
    {
        "id": "a3f1b8b2.5c8418",
        "type": "http request",
        "z": "eb78f2d0.07849",
        "name": "i5-6600:3000/suspend",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://i5-6600:3000/suspend",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 640,
        "y": 180,
        "wires": [
            [
                "111f536b.c2005d"
            ]
        ]
    },
    {
        "id": "111f536b.c2005d",
        "type": "debug",
        "z": "eb78f2d0.07849",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 180,
        "wires": []
    },
    {
        "id": "30390706.7f3248",
        "type": "switch",
        "z": "eb78f2d0.07849",
        "name": "on/off",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 140,
        "wires": [
            [
                "be3b9a6a.85fed8",
                "1abbe278.20911e"
            ],
            [
                "a3f1b8b2.5c8418"
            ]
        ]
    },
    {
        "id": "1abbe278.20911e",
        "type": "exec",
        "z": "eb78f2d0.07849",
        "command": "~/wol.sh && ./cec.sh pc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 650,
        "y": 120,
        "wires": [
            [
                "489c3605.6bdc68"
            ],
            [
                "489c3605.6bdc68"
            ],
            []
        ]
    },
    {
        "id": "f93fbd23.16915",
        "type": "amazon-echo-device",
        "z": "eb78f2d0.07849",
        "name": "Computer",
        "topic": "",
        "x": 300,
        "y": 140,
        "wires": [
            [
                "30390706.7f3248"
            ]
        ]
    },
    {
        "id": "275155c9.7c2e7a",
        "type": "amazon-echo-hub",
        "z": "eb78f2d0.07849",
        "port": "80",
        "processinput": 0,
        "discovery": true,
        "x": 110,
        "y": 40,
        "wires": [
            [
                "f93fbd23.16915",
                "219acea1.b75e02",
                "93370b45.bf1d68",
                "526d7ac9.9e4124",
                "8fdd8e8c.f5e27",
                "635ffcdd.e5a2a4",
                "aedb8510e03290b7"
            ]
        ]
    },
    {
        "id": "219acea1.b75e02",
        "type": "amazon-echo-device",
        "z": "eb78f2d0.07849",
        "name": "Fernseher",
        "topic": "",
        "x": 300,
        "y": 40,
        "wires": [
            [
                "e1fb6a89.88cbc8"
            ]
        ]
    },
    {
        "id": "93370b45.bf1d68",
        "type": "amazon-echo-device",
        "z": "eb78f2d0.07849",
        "name": "Bettlampe",
        "topic": "",
        "x": 300,
        "y": 300,
        "wires": [
            [
                "dedc535f.bf4bb"
            ]
        ]
    },
    {
        "id": "dedc535f.bf4bb",
        "type": "mqtt out",
        "z": "eb78f2d0.07849",
        "name": "",
        "topic": "zigbee2mqtt/Tradfri_WS_Bed/set",
        "qos": "2",
        "retain": "true",
        "broker": "75898696.612e28",
        "x": 540,
        "y": 300,
        "wires": []
    },
    {
        "id": "526d7ac9.9e4124",
        "type": "amazon-echo-device",
        "z": "eb78f2d0.07849",
        "name": "Monitor",
        "topic": "",
        "x": 300,
        "y": 240,
        "wires": [
            [
                "26096220.9e46ce"
            ]
        ]
    },
    {
        "id": "26096220.9e46ce",
        "type": "http request",
        "z": "eb78f2d0.07849",
        "name": "i5-6600:3000/display-*",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://i5-6600:3000/display-{{{payload}}}",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 500,
        "y": 240,
        "wires": [
            [
                "4222918a.b7bbf"
            ]
        ]
    },
    {
        "id": "4222918a.b7bbf",
        "type": "debug",
        "z": "eb78f2d0.07849",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 690,
        "y": 240,
        "wires": []
    },
    {
        "id": "26f6ccd.157cd34",
        "type": "alexa-remote-event",
        "z": "eb78f2d0.07849",
        "name": "",
        "account": "c4597d9.54e398",
        "event": "ws-device-activity",
        "x": 1130,
        "y": 40,
        "wires": [
            [
                "877fdb0b.c5cc18"
            ]
        ]
    },
    {
        "id": "877fdb0b.c5cc18",
        "type": "debug",
        "z": "eb78f2d0.07849",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1310,
        "y": 40,
        "wires": []
    },
    {
        "id": "8fdd8e8c.f5e27",
        "type": "amazon-echo-device",
        "z": "eb78f2d0.07849",
        "name": "CO2",
        "topic": "",
        "x": 290,
        "y": 480,
        "wires": [
            [
                "d3dd9738.81b808",
                "b921292e.f6bc88"
            ]
        ]
    },
    {
        "id": "b1bcd0b.e21393",
        "type": "function",
        "z": "eb78f2d0.07849",
        "name": "on/off -> co2/0",
        "func": "msg.payload = msg.payload == 'on' ? 'co2th' : '0';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 520,
        "wires": [
            [
                "67c3c458cc0ffb7a"
            ]
        ]
    },
    {
        "id": "4221d209.c2a0ac",
        "type": "mqtt out",
        "z": "eb78f2d0.07849",
        "name": "",
        "topic": "lights/WS2812B-8",
        "qos": "2",
        "retain": "true",
        "broker": "75898696.612e28",
        "x": 990,
        "y": 480,
        "wires": []
    },
    {
        "id": "ff3838e6.4fcf98",
        "type": "mqtt in",
        "z": "eb78f2d0.07849",
        "name": "",
        "topic": "sensors/mh-z19b",
        "qos": "2",
        "datatype": "json",
        "broker": "75898696.612e28",
        "inputs": 0,
        "x": 100,
        "y": 640,
        "wires": [
            [
                "207c8923.8c4e06"
            ]
        ]
    },
    {
        "id": "207c8923.8c4e06",
        "type": "function",
        "z": "eb78f2d0.07849",
        "name": "store, ventilated enough?",
        "func": "const co2 = msg.payload.co2;\nflow.set('co2', co2);\nnode.status({fill:\"green\", shape:\"dot\", text:co2});\nconst balcony_open = !flow.get('contact-balcony');\nif (co2 <= 450 && balcony_open && !flow.get('ventilated')) {\n  flow.set('ventilated', true);\n  return msg;\n} else if (co2 >= 600 && !balcony_open) {\n  flow.set('ventilated', false);\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 640,
        "wires": [
            [
                "235d4d3cb20963f4"
            ]
        ]
    },
    {
        "id": "73814078.09fdd",
        "type": "alexa-remote-routine",
        "z": "eb78f2d0.07849",
        "name": "msg.co2",
        "account": "c4597d9.54e398",
        "routineNode": {
            "type": "speak",
            "payload": {
                "type": "announcement",
                "text": {
                    "type": "msg",
                    "value": "co2"
                },
                "devices": [
                    "G091MK0614850G2F"
                ]
            }
        },
        "x": 620,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "d3dd9738.81b808",
        "type": "function",
        "z": "eb78f2d0.07849",
        "name": "on -> co2",
        "func": "if (msg.payload == 'on') {\n    msg.co2 = flow.get('co2').toString();\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 440,
        "wires": [
            [
                "73814078.09fdd"
            ]
        ]
    },
    {
        "id": "38e06429.60584c",
        "type": "mqtt in",
        "z": "eb78f2d0.07849",
        "name": "Aqara_Door_Balcony",
        "topic": "zigbee2mqtt/Aqara_Door_Balcony",
        "qos": "2",
        "datatype": "json",
        "broker": "75898696.612e28",
        "inputs": 0,
        "x": 120,
        "y": 560,
        "wires": [
            [
                "803c1529.e35288"
            ]
        ]
    },
    {
        "id": "803c1529.e35288",
        "type": "function",
        "z": "eb78f2d0.07849",
        "name": "store, on/off",
        "func": "const c = msg.payload.contact;\nif(c === undefined) return;\nflow.set('contact-balcony', c);\nif(c){\n  node.status({fill:\"red\", shape:\"ring\", text:\"closed\"});\n} else {\n  node.status({fill:\"green\", shape:\"dot\", text:\"open\"});\n}\nmsg.payload = c ? 'off' : 'on';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 560,
        "wires": [
            [
                "b921292e.f6bc88"
            ]
        ]
    },
    {
        "id": "36e9087b.e10748",
        "type": "alexa-remote-routine",
        "z": "eb78f2d0.07849",
        "name": "co2 ok",
        "account": "c4597d9.54e398",
        "routineNode": {
            "type": "speakAtVolume",
            "payload": {
                "type": "regular",
                "text": {
                    "type": "str",
                    "value": "co2 ok"
                },
                "volume": {
                    "type": "num",
                    "value": "25"
                },
                "mode": "set",
                "devices": [
                    "G091MK0614850G2F"
                ]
            }
        },
        "x": 550,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "655ce126.85cf5",
        "type": "inject",
        "z": "eb78f2d0.07849",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 680,
        "wires": [
            [
                "235d4d3cb20963f4"
            ]
        ]
    },
    {
        "id": "e1fb6a89.88cbc8",
        "type": "switch",
        "z": "eb78f2d0.07849",
        "name": "on/off",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 40,
        "wires": [
            [
                "be3b9a6a.85fed8"
            ],
            [
                "3dd97e87.a8e772"
            ]
        ]
    },
    {
        "id": "be3b9a6a.85fed8",
        "type": "samsung-tv-turnon",
        "z": "eb78f2d0.07849",
        "device": "4b06aa47.bc1dc4",
        "name": "",
        "x": 640,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "3dd97e87.a8e772",
        "type": "samsung-tv-isalive",
        "z": "eb78f2d0.07849",
        "device": "4b06aa47.bc1dc4",
        "name": "",
        "x": 640,
        "y": 60,
        "wires": [
            [
                "10a27327.7109ed"
            ],
            []
        ]
    },
    {
        "id": "10a27327.7109ed",
        "type": "samsung-tv-send",
        "z": "eb78f2d0.07849",
        "device": "4b06aa47.bc1dc4",
        "name": "",
        "key": "KEY_POWER",
        "x": 860,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "b921292e.f6bc88",
        "type": "switch",
        "z": "eb78f2d0.07849",
        "name": "on/off",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 520,
        "wires": [
            [
                "b1bcd0b.e21393",
                "ba0f847f.6423d8"
            ],
            [
                "1531f082.ef689f"
            ]
        ]
    },
    {
        "id": "ba0f847f.6423d8",
        "type": "trigger",
        "z": "eb78f2d0.07849",
        "name": "off after 10min",
        "op1": "",
        "op2": "off",
        "op1type": "nul",
        "op2type": "str",
        "duration": "10",
        "extend": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 600,
        "y": 500,
        "wires": [
            [
                "b1bcd0b.e21393"
            ]
        ]
    },
    {
        "id": "1531f082.ef689f",
        "type": "delay",
        "z": "eb78f2d0.07849",
        "name": "off after 10s",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 590,
        "y": 540,
        "wires": [
            [
                "b1bcd0b.e21393"
            ]
        ]
    },
    {
        "id": "489c3605.6bdc68",
        "type": "debug",
        "z": "eb78f2d0.07849",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 120,
        "wires": []
    },
    {
        "id": "635ffcdd.e5a2a4",
        "type": "amazon-echo-device",
        "z": "eb78f2d0.07849",
        "name": "Macbook",
        "topic": "",
        "x": 300,
        "y": 360,
        "wires": [
            [
                "5bd4965f.845908"
            ]
        ]
    },
    {
        "id": "5bd4965f.845908",
        "type": "mqtt out",
        "z": "eb78f2d0.07849",
        "name": "",
        "topic": "Macbook",
        "qos": "2",
        "retain": "false",
        "broker": "75898696.612e28",
        "x": 460,
        "y": 360,
        "wires": []
    },
    {
        "id": "40ffba0a35e1b80f",
        "type": "exec",
        "z": "eb78f2d0.07849",
        "command": "ssh rpi4 '~/switchbot.py e9:94:ab:b3:d1:ee press'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1150,
        "y": 300,
        "wires": [
            [],
            [
                "468c393e817991bd"
            ],
            []
        ]
    },
    {
        "id": "aedb8510e03290b7",
        "type": "amazon-echo-device",
        "z": "eb78f2d0.07849",
        "name": "Kaffee",
        "topic": "",
        "x": 870,
        "y": 300,
        "wires": [
            [
                "40ffba0a35e1b80f"
            ]
        ]
    },
    {
        "id": "66632a1d6a536b88",
        "type": "pushbullet in",
        "z": "eb78f2d0.07849",
        "config": "119e8fc6635b6db9",
        "name": "",
        "x": 860,
        "y": 360,
        "wires": [
            [
                "20d3e2c06f71fb17",
                "eb684c3d1b649387"
            ]
        ]
    },
    {
        "id": "20d3e2c06f71fb17",
        "type": "debug",
        "z": "eb78f2d0.07849",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 400,
        "wires": []
    },
    {
        "id": "eb684c3d1b649387",
        "type": "function",
        "z": "eb78f2d0.07849",
        "name": "IFTTT out of bed?",
        "func": "if (msg.data.sender_name == \"IFTTT\" && msg.topic.startsWith(\"Out of bed\")) {\n  return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 360,
        "wires": [
            [
                "0a7d0c7a90734a2a"
            ]
        ]
    },
    {
        "id": "1562b0530c6b8603",
        "type": "alexa-remote-routine",
        "z": "eb78f2d0.07849",
        "name": "Mache Kaffee.",
        "account": "c4597d9.54e398",
        "routineNode": {
            "type": "speakAtVolume",
            "payload": {
                "type": "regular",
                "text": {
                    "type": "str",
                    "value": "Mache Kaffee."
                },
                "volume": {
                    "type": "num",
                    "value": "20"
                },
                "mode": "set",
                "devices": [
                    "G091MK0614850G2F"
                ]
            }
        },
        "x": 1420,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "0a7d0c7a90734a2a",
        "type": "delay",
        "z": "eb78f2d0.07849",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "12",
        "rateUnits": "hour",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1220,
        "y": 360,
        "wires": [
            [
                "40ffba0a35e1b80f",
                "1562b0530c6b8603"
            ]
        ]
    },
    {
        "id": "5b49e445b80ee338",
        "type": "inject",
        "z": "eb78f2d0.07849",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 890,
        "y": 260,
        "wires": [
            [
                "40ffba0a35e1b80f"
            ]
        ]
    },
    {
        "id": "468c393e817991bd",
        "type": "debug",
        "z": "eb78f2d0.07849",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 300,
        "wires": []
    },
    {
        "id": "67c3c458cc0ffb7a",
        "type": "mqtt out",
        "z": "eb78f2d0.07849",
        "name": "",
        "topic": "lights/wled-matrix",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "75898696.612e28",
        "x": 990,
        "y": 540,
        "wires": []
    },
    {
        "id": "17503bed5bfd9f8c",
        "type": "inject",
        "z": "eb78f2d0.07849",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 780,
        "wires": [
            [
                "bdba62ae2a99c56c"
            ]
        ]
    },
    {
        "id": "bdba62ae2a99c56c",
        "type": "subflow:d6a6d25b50443937",
        "z": "eb78f2d0.07849",
        "name": "",
        "env": [
            {
                "name": "buzzes",
                "value": "2",
                "type": "num"
            }
        ],
        "x": 250,
        "y": 820,
        "wires": []
    },
    {
        "id": "e5649c9574569d2b",
        "type": "subflow:d6a6d25b50443937",
        "z": "eb78f2d0.07849",
        "name": "",
        "x": 550,
        "y": 600,
        "wires": []
    },
    {
        "id": "baf370aa8abc5959",
        "type": "inject",
        "z": "eb78f2d0.07849",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1240,
        "y": 400,
        "wires": [
            [
                "1562b0530c6b8603"
            ]
        ]
    },
    {
        "id": "c643d963ad02115b",
        "type": "mqtt in",
        "z": "eb78f2d0.07849",
        "name": "",
        "topic": "dash/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "75898696.612e28",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 70,
        "y": 820,
        "wires": [
            [
                "bdba62ae2a99c56c",
                "56b144834081c031",
                "53633ddb8a619157"
            ]
        ]
    },
    {
        "id": "56b144834081c031",
        "type": "debug",
        "z": "eb78f2d0.07849",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 250,
        "y": 900,
        "wires": []
    },
    {
        "id": "53633ddb8a619157",
        "type": "alexa-remote-routine",
        "z": "eb78f2d0.07849",
        "name": "msg.topic",
        "account": "c4597d9.54e398",
        "routineNode": {
            "type": "speakAtVolume",
            "payload": {
                "type": "regular",
                "text": {
                    "type": "jsonata",
                    "value": "$replace(topic, 'dash/', '')"
                },
                "volume": {
                    "type": "num",
                    "value": "50"
                },
                "mode": "set",
                "devices": [
                    "G091MK0614850G2F"
                ]
            }
        },
        "x": 260,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "9f15beac.00823",
        "type": "samsung-tv-turnon",
        "z": "5579b405.ff7b4c",
        "device": "4b06aa47.bc1dc4",
        "name": "",
        "x": 280,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "57a0d667.df9448",
        "type": "inject",
        "z": "5579b405.ff7b4c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 200,
        "wires": [
            [
                "9f15beac.00823"
            ]
        ]
    },
    {
        "id": "223067d5.e8a638",
        "type": "samsung-tv-send",
        "z": "5579b405.ff7b4c",
        "device": "4b06aa47.bc1dc4",
        "name": "",
        "key": "KEY_MUTE",
        "x": 270,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "da1aaf1.54a155",
        "type": "inject",
        "z": "5579b405.ff7b4c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 280,
        "wires": [
            [
                "223067d5.e8a638"
            ]
        ]
    },
    {
        "id": "407d1ee0.990b4",
        "type": "samsung-tv-getapps",
        "z": "5579b405.ff7b4c",
        "device": "4b06aa47.bc1dc4",
        "name": "",
        "x": 280,
        "y": 120,
        "wires": [
            [
                "f8f72f28.67d78"
            ]
        ]
    },
    {
        "id": "2cba60c3.a129c",
        "type": "inject",
        "z": "5579b405.ff7b4c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 120,
        "wires": [
            [
                "407d1ee0.990b4"
            ]
        ]
    },
    {
        "id": "f8f72f28.67d78",
        "type": "debug",
        "z": "5579b405.ff7b4c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 470,
        "y": 120,
        "wires": []
    },
    {
        "id": "38e629da.1d3226",
        "type": "samsung-tv-openapp",
        "z": "5579b405.ff7b4c",
        "device": "4b06aa47.bc1dc4",
        "name": "open Netflix",
        "appid": "11101200001",
        "x": 250,
        "y": 160,
        "wires": [
            [
                "14affc8e.6f6253"
            ]
        ]
    },
    {
        "id": "6a8bf555.ca9b4c",
        "type": "inject",
        "z": "5579b405.ff7b4c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 160,
        "wires": [
            [
                "38e629da.1d3226"
            ]
        ]
    },
    {
        "id": "14affc8e.6f6253",
        "type": "debug",
        "z": "5579b405.ff7b4c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 470,
        "y": 160,
        "wires": []
    },
    {
        "id": "66922032.059bd",
        "type": "samsung-tv-send",
        "z": "5579b405.ff7b4c",
        "device": "4b06aa47.bc1dc4",
        "name": "",
        "key": "KEY_POWER",
        "x": 280,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "32901082.295a6",
        "type": "inject",
        "z": "5579b405.ff7b4c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 240,
        "wires": [
            [
                "66922032.059bd"
            ]
        ]
    },
    {
        "id": "530f540e.c78e0c",
        "type": "samsung-tv-send",
        "z": "5579b405.ff7b4c",
        "device": "4b06aa47.bc1dc4",
        "name": "",
        "key": "KEY_HDMI",
        "x": 270,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "48c37053.6f449",
        "type": "inject",
        "z": "5579b405.ff7b4c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 320,
        "wires": [
            [
                "530f540e.c78e0c"
            ]
        ]
    },
    {
        "id": "80f52736.f12808",
        "type": "samsung-tv-send",
        "z": "5579b405.ff7b4c",
        "device": "4b06aa47.bc1dc4",
        "name": "",
        "key": "KEY_CHUP",
        "x": 270,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "a5420adb.4330f8",
        "type": "inject",
        "z": "5579b405.ff7b4c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 360,
        "wires": [
            [
                "80f52736.f12808"
            ]
        ]
    },
    {
        "id": "40664ecc.627d5",
        "type": "samsung-tv-send",
        "z": "5579b405.ff7b4c",
        "device": "4b06aa47.bc1dc4",
        "name": "",
        "key": "KEY_TV",
        "x": 840,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "14bd3c9.de7edc3",
        "type": "inject",
        "z": "5579b405.ff7b4c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 680,
        "y": 80,
        "wires": [
            [
                "40664ecc.627d5"
            ]
        ]
    },
    {
        "id": "4e4a361f.80ccd8",
        "type": "samsung-tv-send",
        "z": "5579b405.ff7b4c",
        "device": "4b06aa47.bc1dc4",
        "name": "",
        "key": "KEY_TV_MODE",
        "x": 870,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "eeafb789.3c11e8",
        "type": "inject",
        "z": "5579b405.ff7b4c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 680,
        "y": 120,
        "wires": [
            [
                "4e4a361f.80ccd8"
            ]
        ]
    },
    {
        "id": "af71c9cb.6e22f8",
        "type": "samsung-tv-send",
        "z": "5579b405.ff7b4c",
        "device": "4b06aa47.bc1dc4",
        "name": "",
        "key": "KEY_POWEROFF",
        "x": 870,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "1cb5ecbb.baae83",
        "type": "inject",
        "z": "5579b405.ff7b4c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 680,
        "y": 160,
        "wires": [
            [
                "af71c9cb.6e22f8"
            ]
        ]
    },
    {
        "id": "86045c6b.fa3d9",
        "type": "comment",
        "z": "5579b405.ff7b4c",
        "name": "unhandled keys:",
        "info": "",
        "x": 700,
        "y": 40,
        "wires": []
    },
    {
        "id": "eca40eec.3f427",
        "type": "samsung-tv-isalive",
        "z": "5579b405.ff7b4c",
        "device": "4b06aa47.bc1dc4",
        "name": "",
        "x": 280,
        "y": 60,
        "wires": [
            [
                "39bd4ea7.009542"
            ],
            [
                "413b2b29.02c894"
            ]
        ]
    },
    {
        "id": "39bd4ea7.009542",
        "type": "debug",
        "z": "5579b405.ff7b4c",
        "name": "TV is on",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "\"TV is on: \" & payload",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 40,
        "wires": []
    },
    {
        "id": "413b2b29.02c894",
        "type": "debug",
        "z": "5579b405.ff7b4c",
        "name": "TV is off",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "\"TV is off: \" & payload",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 80,
        "wires": []
    },
    {
        "id": "d210e355.5b643",
        "type": "inject",
        "z": "5579b405.ff7b4c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "eca40eec.3f427"
            ]
        ]
    },
    {
        "id": "6bb33afe.30f524",
        "type": "comment",
        "z": "5579b405.ff7b4c",
        "name": "run tvservice --off if cec-client can not connect",
        "info": "",
        "x": 360,
        "y": 460,
        "wires": []
    },
    {
        "id": "3ef17627.978e2a",
        "type": "exec",
        "z": "5579b405.ff7b4c",
        "command": "~/smart-home/cec.sh",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 280,
        "y": 520,
        "wires": [
            [
                "aa3f6093.ba277"
            ],
            [
                "aa3f6093.ba277"
            ],
            []
        ]
    },
    {
        "id": "aa3f6093.ba277",
        "type": "debug",
        "z": "5579b405.ff7b4c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 520,
        "wires": []
    },
    {
        "id": "4f3f8f0e.d36ba",
        "type": "inject",
        "z": "5579b405.ff7b4c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "on",
        "payloadType": "str",
        "x": 90,
        "y": 500,
        "wires": [
            [
                "3ef17627.978e2a"
            ]
        ]
    },
    {
        "id": "c733503e.21db9",
        "type": "inject",
        "z": "5579b405.ff7b4c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "x": 90,
        "y": 540,
        "wires": [
            [
                "3ef17627.978e2a"
            ]
        ]
    },
    {
        "id": "2d79576e.8933b8",
        "type": "inject",
        "z": "5579b405.ff7b4c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "status",
        "payloadType": "str",
        "x": 90,
        "y": 660,
        "wires": [
            [
                "3ef17627.978e2a"
            ]
        ]
    },
    {
        "id": "f75c8922.84cf68",
        "type": "inject",
        "z": "5579b405.ff7b4c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "pc",
        "payloadType": "str",
        "x": 90,
        "y": 580,
        "wires": [
            [
                "3ef17627.978e2a"
            ]
        ]
    },
    {
        "id": "d9aa1743.df0c18",
        "type": "inject",
        "z": "5579b405.ff7b4c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "tv",
        "payloadType": "str",
        "x": 90,
        "y": 620,
        "wires": [
            [
                "3ef17627.978e2a"
            ]
        ]
    },
    {
        "id": "16e7d2c9.5a228d",
        "type": "telegram receiver",
        "z": "abafeffb.7205",
        "name": "",
        "bot": "a496418f.7eb54",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 620,
        "y": 40,
        "wires": [
            [
                "332d5efa.22dcc2"
            ],
            []
        ]
    },
    {
        "id": "5961aef4.4bbaf",
        "type": "telegram sender",
        "z": "abafeffb.7205",
        "name": "",
        "bot": "a496418f.7eb54",
        "outputs": 1,
        "x": 410,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "332d5efa.22dcc2",
        "type": "debug",
        "z": "abafeffb.7205",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 60,
        "wires": []
    },
    {
        "id": "bdf92daf.add7e",
        "type": "inject",
        "z": "abafeffb.7205",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 40,
        "wires": [
            [
                "fade38e8.193bb8"
            ]
        ]
    },
    {
        "id": "fade38e8.193bb8",
        "type": "function",
        "z": "abafeffb.7205",
        "name": "at home?",
        "func": "var opts = { reply_markup:\n    JSON.stringify({ \"inline_keyboard\":\n        [[ { \"text\": \"yes\", \"callback_data\": \"yes\" },\n           { \"text\": \"no\", \"callback_data\":  \"no\" }] ] })\n};\nmsg.payload = {};\nmsg.payload.content = \"Are you at home?\";\nmsg.payload.options = opts;\nmsg.payload.chatId = 1150640683;\n// msg.payload.messageId = 99;\n// msg.payload.sentMessageId = 99;\nmsg.payload.type = \"message\";\nreturn [ msg ];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 40,
        "wires": [
            [
                "5961aef4.4bbaf"
            ]
        ]
    },
    {
        "id": "ccd7ef18.14dc",
        "type": "fritzbox-in",
        "z": "abafeffb.7205",
        "device": "b731d344.87a9",
        "name": "",
        "service": "urn:dslforum-org:service:Hosts:1",
        "action": "GetSpecificHostEntry",
        "arguments": "{\n  \"NewMACAddress\": \"value\"\n}",
        "x": 270,
        "y": 200,
        "wires": [
            [
                "30fd7e32.fa8e62"
            ]
        ]
    },
    {
        "id": "24ddd626.8357fa",
        "type": "debug",
        "z": "abafeffb.7205",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 160,
        "wires": []
    },
    {
        "id": "566f3b7d.747d44",
        "type": "inject",
        "z": "abafeffb.7205",
        "name": "Pixel 2 XL 10s",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"NewMACAddress\":\"B4:F7:A1:E3:7D:26\"}",
        "payloadType": "json",
        "x": 120,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "8aae9476.7d5ca8",
        "type": "mqtt in",
        "z": "abafeffb.7205",
        "name": "Aqara_Door_Apt",
        "topic": "zigbee2mqtt/Aqara_Door_Apt",
        "qos": "2",
        "datatype": "json",
        "broker": "75898696.612e28",
        "inputs": 0,
        "x": 100,
        "y": 260,
        "wires": [
            [
                "e33117ba.c0a118"
            ]
        ]
    },
    {
        "id": "9e224c7c.3087c",
        "type": "function",
        "z": "abafeffb.7205",
        "name": "store, duration",
        "func": "const c = msg.payload.contact;\nif(c === undefined) return;\nflow.set('contact-apt', c);\nif(c){\n  node.status({fill:\"red\", shape:\"ring\", text:\"closed\"});\n} else {\n  node.status({fill:\"green\", shape:\"dot\", text:\"open\"});\n}\n\n// we only react when the door is closed\nif (!c) return;\nconst last = flow.get('last-closed-apt');\nflow.set('last-closed-apt', Date.now());\nif (!last) return; // no value yet since node-red was restarted\nconst diff = Date.now() - last; // duration in ms\n// duration as string hh:mm:ss\n// const dur = new Date(diff).toISOString().substr(11, 8); // not good for more than 1 day since modulo 24h\n// duration as shortest string given units xs\nlet fmt = (t, xs) => {\n  if (xs.length === 0) return t;\n  else {\n    const d = xs.pop();\n    return (t >= d ? fmt(Math.floor(t/d), xs) + ':' : '') + (t%d+'').padStart(2, 0);\n  }\n}\nconst dur = fmt(Math.floor(diff/1000), [24,60,60]);\nconst time = new Date().toLocaleTimeString('en-US', { hour12: false }); // de-DE is available in the browser but not in node-red\nmsg.payload = {\n    \"content\": `Door was last closed ${dur} ago. Now it's ${time}.`,\n    \"type\": \"message\",\n    \"chatId\": 1150640683,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 260,
        "wires": [
            [
                "be90aa84a46f90d7"
            ]
        ]
    },
    {
        "id": "30fd7e32.fa8e62",
        "type": "rbe",
        "z": "abafeffb.7205",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.NewActive",
        "x": 410,
        "y": 200,
        "wires": [
            [
                "24ddd626.8357fa",
                "24f773b7.c07eac"
            ]
        ]
    },
    {
        "id": "24f773b7.c07eac",
        "type": "function",
        "z": "abafeffb.7205",
        "name": "store, msg",
        "func": "const c = msg.payload.NewActive == 1;\nflow.set('phone-wifi', c);\nif(c){\n  node.status({fill:\"green\", shape:\"dot\", text:\"connected\"});\n} else {\n  node.status({fill:\"red\", shape:\"ring\", text:\"disconnected\"});\n  \n}\nconst time = new Date().toLocaleTimeString('en-US', { hour12: false }); // de-DE is available in the browser but not in node-red\nmsg.payload = {\n    \"content\": `Phone ${c ? 'connected to' : 'disconnected from'} WiFi at ${time}.`,\n    \"type\": \"message\",\n    \"chatId\": 1150640683,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 200,
        "wires": [
            [
                "be90aa84a46f90d7"
            ]
        ]
    },
    {
        "id": "269cceea.250782",
        "type": "telegram sender",
        "z": "abafeffb.7205",
        "name": "",
        "bot": "a496418f.7eb54",
        "outputs": 1,
        "x": 750,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "e33117ba.c0a118",
        "type": "rbe",
        "z": "abafeffb.7205",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.contact",
        "x": 250,
        "y": 260,
        "wires": [
            [
                "9e224c7c.3087c"
            ]
        ]
    },
    {
        "id": "56975d66.9b9ce4",
        "type": "inject",
        "z": "abafeffb.7205",
        "name": "Pixel 5 10s",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"NewMACAddress\":\"46:0D:DF:86:A2:0D\"}",
        "payloadType": "json",
        "x": 110,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "8dfe8e9f.43043",
        "type": "mqtt in",
        "z": "abafeffb.7205",
        "name": "",
        "topic": "doorbell",
        "qos": "2",
        "datatype": "json",
        "broker": "75898696.612e28",
        "inputs": 0,
        "x": 80,
        "y": 380,
        "wires": [
            [
                "4969acbf.339bf4"
            ]
        ]
    },
    {
        "id": "4969acbf.339bf4",
        "type": "function",
        "z": "abafeffb.7205",
        "name": "store, duration",
        "func": "const time = new Date().toLocaleTimeString('en-US', { hour12: false }); // de-DE is available in the browser but not in node-red\nmsg.payload = {\n    \"content\": `Doorbell? Noise reached ${msg.payload.hits}. Now it's ${time}.`,\n    \"type\": \"message\",\n    \"chatId\": 1150640683,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 240,
        "y": 380,
        "wires": [
            [
                "c33b680f.951578"
            ]
        ]
    },
    {
        "id": "c33b680f.951578",
        "type": "telegram sender",
        "z": "abafeffb.7205",
        "name": "",
        "bot": "a496418f.7eb54",
        "outputs": 1,
        "x": 430,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "dd6f1813.0fa868",
        "type": "alexa-remote-routine",
        "z": "abafeffb.7205",
        "name": "",
        "account": "c4597d9.54e398",
        "routineNode": {
            "type": "speakAtVolume",
            "payload": {
                "type": "regular",
                "text": {
                    "type": "str",
                    "value": "Ding Dong Ding"
                },
                "volume": {
                    "type": "num",
                    "value": "75"
                },
                "mode": "set",
                "devices": [
                    "G090LF1072021P6R"
                ]
            }
        },
        "x": 450,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "4255c5048d907a92",
        "type": "mqtt in",
        "z": "abafeffb.7205",
        "name": "Hue_Motion_Bath",
        "topic": "zigbee2mqtt/Hue_Motion_Bath",
        "qos": "2",
        "datatype": "json",
        "broker": "75898696.612e28",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 110,
        "y": 580,
        "wires": [
            [
                "045abedfc3caf646"
            ]
        ]
    },
    {
        "id": "0efefb53e27d2949",
        "type": "mqtt in",
        "z": "abafeffb.7205",
        "name": "Hue_Motion_Kitchen",
        "topic": "zigbee2mqtt/Hue_Motion_Kitchen",
        "qos": "2",
        "datatype": "json",
        "broker": "75898696.612e28",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 110,
        "y": 620,
        "wires": [
            [
                "045abedfc3caf646"
            ]
        ]
    },
    {
        "id": "072af0416d592577",
        "type": "mqtt in",
        "z": "abafeffb.7205",
        "name": "Hue_Motion_Living",
        "topic": "zigbee2mqtt/Hue_Motion_Living",
        "qos": "2",
        "datatype": "json",
        "broker": "75898696.612e28",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 110,
        "y": 660,
        "wires": [
            [
                "045abedfc3caf646"
            ]
        ]
    },
    {
        "id": "d18e082ae82879c1",
        "type": "rbe",
        "z": "abafeffb.7205",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload.contact",
        "topi": "topic",
        "x": 310,
        "y": 740,
        "wires": [
            [
                "fc660d172d27f0f5",
                "da42beaec139cff7"
            ]
        ]
    },
    {
        "id": "ce81667a974288d7",
        "type": "mqtt in",
        "z": "abafeffb.7205",
        "name": "Aqara_Door_Balcony",
        "topic": "zigbee2mqtt/Aqara_Door_Balcony",
        "qos": "2",
        "datatype": "json",
        "broker": "75898696.612e28",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 120,
        "y": 780,
        "wires": [
            [
                "d18e082ae82879c1"
            ]
        ]
    },
    {
        "id": "2b02d4c8f394d78e",
        "type": "mqtt in",
        "z": "abafeffb.7205",
        "name": "Aqara_Door_Living",
        "topic": "zigbee2mqtt/Aqara_Door_Living",
        "qos": "2",
        "datatype": "json",
        "broker": "75898696.612e28",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 110,
        "y": 740,
        "wires": [
            [
                "d18e082ae82879c1"
            ]
        ]
    },
    {
        "id": "c2fb4527a85c57bd",
        "type": "mqtt in",
        "z": "abafeffb.7205",
        "name": "Aqara_Door_Bath",
        "topic": "zigbee2mqtt/Aqara_Door_Bath",
        "qos": "2",
        "datatype": "json",
        "broker": "75898696.612e28",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 110,
        "y": 700,
        "wires": [
            [
                "d18e082ae82879c1"
            ]
        ]
    },
    {
        "id": "045abedfc3caf646",
        "type": "switch",
        "z": "abafeffb.7205",
        "name": "",
        "property": "payload.occupancy",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 310,
        "y": 620,
        "wires": [
            [
                "4ef67a9790084033",
                "fc660d172d27f0f5"
            ]
        ]
    },
    {
        "id": "4ef67a9790084033",
        "type": "debug",
        "z": "abafeffb.7205",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 580,
        "wires": []
    },
    {
        "id": "93d124e052adf2f4",
        "type": "hourglass",
        "z": "abafeffb.7205",
        "name": "",
        "persistId": "",
        "humanizeLocale": "",
        "x": 600,
        "y": 680,
        "wires": [
            [
                "e983420580e842d1"
            ]
        ]
    },
    {
        "id": "fc660d172d27f0f5",
        "type": "change",
        "z": "abafeffb.7205",
        "name": "reset",
        "rules": [
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 680,
        "wires": [
            [
                "93d124e052adf2f4"
            ]
        ]
    },
    {
        "id": "da42beaec139cff7",
        "type": "debug",
        "z": "abafeffb.7205",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 780,
        "wires": []
    },
    {
        "id": "e983420580e842d1",
        "type": "debug",
        "z": "abafeffb.7205",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 680,
        "wires": []
    },
    {
        "id": "2518618caa85ae61",
        "type": "inject",
        "z": "abafeffb.7205",
        "name": "start",
        "props": [
            {
                "p": "command",
                "v": "start",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 470,
        "y": 620,
        "wires": [
            [
                "93d124e052adf2f4"
            ]
        ]
    },
    {
        "id": "328ff92afdcf8fa9",
        "type": "inject",
        "z": "abafeffb.7205",
        "name": "status",
        "props": [
            {
                "p": "command",
                "v": "status",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 470,
        "y": 740,
        "wires": [
            [
                "93d124e052adf2f4"
            ]
        ]
    },
    {
        "id": "7282abb01d07f770",
        "type": "telegram event",
        "z": "abafeffb.7205",
        "name": "",
        "bot": "a496418f.7eb54",
        "event": "callback_query",
        "autoanswer": true,
        "x": 620,
        "y": 100,
        "wires": [
            [
                "332d5efa.22dcc2"
            ]
        ]
    },
    {
        "id": "ed57f950a53f8c3a",
        "type": "file",
        "z": "abafeffb.7205",
        "name": "",
        "filename": "/home/pi/presence.tsv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 900,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "23be851ba13e08c8",
        "type": "debug",
        "z": "abafeffb.7205",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 300,
        "wires": []
    },
    {
        "id": "be90aa84a46f90d7",
        "type": "function",
        "z": "abafeffb.7205",
        "name": "tsv",
        "func": "const datetime = (new Date()).toLocaleString('sv'); // toISOString() is UTC instead of local, Sweden uses ISO8601 format and same time zone (CET/CEST) https://stackoverflow.com/a/58633651\nmsg.payload = `${datetime}\\t${msg.payload.content}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 260,
        "wires": [
            [
                "23be851ba13e08c8",
                "ed57f950a53f8c3a"
            ]
        ]
    },
    {
        "id": "61fb0ed0f55f98a2",
        "type": "catch",
        "z": "25f51f1a963341a3",
        "name": "",
        "scope": null,
        "x": 100,
        "y": 80,
        "wires": [
            [
                "651418445aa03401"
            ]
        ]
    },
    {
        "id": "651418445aa03401",
        "type": "debug",
        "z": "25f51f1a963341a3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 250,
        "y": 80,
        "wires": []
    },
    {
        "id": "ba4f6b77016138d1",
        "type": "status",
        "z": "25f51f1a963341a3",
        "name": "",
        "scope": null,
        "x": 100,
        "y": 40,
        "wires": [
            [
                "651418445aa03401"
            ]
        ]
    },
    {
        "id": "e8a753bd64709253",
        "type": "debug",
        "z": "25f51f1a963341a3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "x": 270,
        "y": 120,
        "wires": []
    },
    {
        "id": "a8ecae6f69113054",
        "type": "mqtt in",
        "z": "25f51f1a963341a3",
        "name": "",
        "topic": "zigbee2mqtt/#",
        "qos": "2",
        "broker": "75898696.612e28",
        "inputs": 0,
        "x": 110,
        "y": 120,
        "wires": [
            [
                "e8a753bd64709253"
            ]
        ]
    },
    {
        "id": "13b97d77aa842a60",
        "type": "influxdb in",
        "z": "25f51f1a963341a3",
        "influxdb": "3406502b18c11d64",
        "name": "last co2",
        "query": "SELECT \"co2\" FROM \"telegraf\".\"autogen\".\"mqtt_consumer\" WHERE \"topic\"='sensors/mh-z19b' ORDER BY DESC LIMIT 1",
        "rawOutput": true,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 260,
        "y": 220,
        "wires": [
            [
                "8eb2e89e2da165c3"
            ]
        ]
    },
    {
        "id": "8eb2e89e2da165c3",
        "type": "debug",
        "z": "25f51f1a963341a3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.results[0].series[0].values[0][1]",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 220,
        "wires": []
    },
    {
        "id": "d84f4a019d818620",
        "type": "inject",
        "z": "25f51f1a963341a3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 220,
        "wires": [
            [
                "13b97d77aa842a60"
            ]
        ]
    },
    {
        "id": "94e2b625ea63bae1",
        "type": "image viewer",
        "z": "c244880f71d23ef4",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 370,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "b78708205eaae06c",
        "type": "jimp-image",
        "z": "c244880f71d23ef4",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "img",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 220,
        "y": 160,
        "wires": [
            [
                "94e2b625ea63bae1",
                "f853a4ed4e4cb86f"
            ]
        ]
    },
    {
        "id": "1f8a16cba1ffcb66",
        "type": "inject",
        "z": "c244880f71d23ef4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "https://placekitten.com/200/300",
        "payloadType": "str",
        "x": 80,
        "y": 160,
        "wires": [
            [
                "b78708205eaae06c"
            ]
        ]
    },
    {
        "id": "f853a4ed4e4cb86f",
        "type": "jimp-image",
        "z": "c244880f71d23ef4",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "img",
        "parameter1": "16",
        "parameter1Type": "num",
        "parameter2": "16",
        "parameter2Type": "num",
        "parameter3": "",
        "parameter3Type": "none",
        "parameter4": "",
        "parameter4Type": "none",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 4,
        "jimpFunction": "contain",
        "selectedJimpFunction": {
            "name": "contain",
            "fn": "contain",
            "description": "scale the image to the given width and height, some parts of the image may be letter boxed",
            "parameters": [
                {
                    "name": "w",
                    "type": "num",
                    "required": true,
                    "hint": "the width to resize the image to"
                },
                {
                    "name": "h",
                    "type": "num",
                    "required": true,
                    "hint": "the height to resize the image to"
                },
                {
                    "name": "alignBits",
                    "type": "alignMode",
                    "required": false,
                    "hint": "A bitmask for horizontal and vertical alignment. Jimp.HORIZONTAL_ALIGN_LEFT | Jimp.HORIZONTAL_ALIGN_CENTER | Jimp.HORIZONTAL_ALIGN_RIGHT | Jimp.VERTICAL_ALIGN_TOP | Jimp.VERTICAL_ALIGN_MIDDLE | Jimp.VERTICAL_ALIGN_BOTTOM;"
                },
                {
                    "name": "mode",
                    "type": "resizeMode",
                    "required": false,
                    "hint": "A scaling method (e.g. Jimp.RESIZE_BEZIER)"
                }
            ]
        },
        "x": 380,
        "y": 100,
        "wires": [
            [
                "27b68c50a51a43ce",
                "6c84d54f8098e615"
            ]
        ]
    },
    {
        "id": "27b68c50a51a43ce",
        "type": "image viewer",
        "z": "c244880f71d23ef4",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 550,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "2016affe3bb86465",
        "type": "jimp-image",
        "z": "c244880f71d23ef4",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "img",
        "parameter1": "FONT_SANS_8_WHITE",
        "parameter1Type": "jimpFont",
        "parameter2": "0",
        "parameter2Type": "num",
        "parameter3": "0",
        "parameter3Type": "num",
        "parameter4": "1234\\n5678",
        "parameter4Type": "str",
        "parameter5": "",
        "parameter5Type": "none",
        "parameter6": "",
        "parameter6Type": "none",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 6,
        "jimpFunction": "print",
        "selectedJimpFunction": {
            "name": "print",
            "fn": "print",
            "description": "Print text to the image",
            "parameters": [
                {
                    "name": "font|str",
                    "type": "jimpFont",
                    "required": true,
                    "hint": "font to print. NOTE: This can be one of the presets or the path to a fnt file"
                },
                {
                    "name": "x",
                    "type": "num",
                    "required": true,
                    "hint": "x coordinate to print text"
                },
                {
                    "name": "y",
                    "type": "num",
                    "required": true,
                    "hint": "y coordinate to print text"
                },
                {
                    "name": "text",
                    "type": "str",
                    "required": true,
                    "hint": "text to print"
                },
                {
                    "name": "maxWidth",
                    "type": "num",
                    "required": false,
                    "hint": "wrap text at maxWidth"
                },
                {
                    "name": "maxHeight",
                    "type": "num",
                    "required": false,
                    "hint": "max height"
                }
            ]
        },
        "x": 610,
        "y": 40,
        "wires": [
            [
                "7466a4dea7a786db"
            ]
        ]
    },
    {
        "id": "7466a4dea7a786db",
        "type": "image viewer",
        "z": "c244880f71d23ef4",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 730,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "6c84d54f8098e615",
        "type": "jimp-image",
        "z": "c244880f71d23ef4",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "img",
        "parameter1": "-1",
        "parameter1Type": "num",
        "parameter2": "0",
        "parameter2Type": "num",
        "parameter3": "0",
        "parameter3Type": "none",
        "parameter4": "1234",
        "parameter4Type": "none",
        "parameter5": "",
        "parameter5Type": "none",
        "parameter6": "",
        "parameter6Type": "none",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 1,
        "jimpFunction": "brightness",
        "selectedJimpFunction": {
            "name": "brightness",
            "fn": "brightness",
            "description": "adjust the brightness",
            "parameters": [
                {
                    "name": "val",
                    "type": "num",
                    "required": true,
                    "hint": "adjust the brightness by a value -1.0 to 1.0"
                }
            ]
        },
        "x": 470,
        "y": 40,
        "wires": [
            [
                "2016affe3bb86465"
            ]
        ]
    }
]
